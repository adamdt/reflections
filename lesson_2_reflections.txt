1) What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository, Git creates a hidden folder (.git) with
	metadata in it that defines the history and status of the repository. You need
	to initialize a repository to generate that metadata and tell Git to use the
	directory as a repository.

2) How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area consists of files in the working directory that will eventually
	be added to the repository in a commit. It offers a way of choosing which files
	will be committed and which do not need to be committed.

3) How can you use the staging area to make sure you have one commit per logical
change?

	Only add files that deal with the specific problem you're working on to the
	staging area. Then check using git diff to ensure that the only changes in the
	staging area are the ones pertaining to the current problem.

4) What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches are helpful in making substantial changes to a project while wishing to
	retain a working copy. Localization, new features, different versions, etc. are
	all reasons to create a new branch.

5) How do the diagrams help you visualize the branch structure?

	The diagrams help me to see how branches are connected and, more importantly, how
	they're NOT connected (detatched heads, etc.). I have a feeling the diagrams will
	be helpful in learning about merging, too.